name: Deploy VM

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (dev or prod)"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prod

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v4

      - name: 🔐 Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: false

      - name: 🛠️ Install Bicep CLI
        run: |
          az bicep install
          az bicep version

      - name: 🧪 Build .bicepparam to JSON
        working-directory: ./vm-deployment
        run: |
          ENV="${{ github.event.inputs.environment }}"
          bicep build-params "${ENV}.bicepparam" --outfile "${ENV}.parameters.json"

      - name: 🌐 Check and Create Resource Group if Missing
        working-directory: ./vm-deployment
        run: |
          ENV="${{ github.event.inputs.environment }}"
          RESOURCE_GROUP="$(jq -r '.parameters.resourceGroupName.value' ${ENV}.parameters.json)"
          LOCATION="$(jq -r '.parameters.location.value' ${ENV}.parameters.json)"
          echo "Checking if Resource Group $RESOURCE_GROUP exists in $LOCATION..."

          # Check if the resource group exists
          if ! az group show --name "$RESOURCE_GROUP" &>/dev/null; then
            echo "Resource Group $RESOURCE_GROUP does not exist. Creating in $LOCATION..."
            az group create --name "$RESOURCE_GROUP" --location "$LOCATION"
          else
            echo "Resource Group $RESOURCE_GROUP already exists."
          fi

      - name: 🚀 Deploy VM from Bicep
        working-directory: ./vm-deployment
        run: |
          ENV="${{ github.event.inputs.environment }}"
          RESOURCE_GROUP="$(jq -r '.parameters.resourceGroupName.value' ${ENV}.parameters.json)"
          echo "Using Resource Group: $RESOURCE_GROUP"
          az deployment group create \
            --resource-group "$RESOURCE_GROUP" \
            --template-file main.bicep \
            --parameters @"${ENV}.parameters.json"
